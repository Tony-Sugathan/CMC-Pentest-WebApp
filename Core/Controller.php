<?php


namespace Core;
use App\Models\CartItems;
use App\Models\Users;


abstract class Controller
{

    /**
     * Param from matched route (id, etc)
     * @var array
     */
    protected $route_params = [];

    public function __construct($route_params)
    {
        $this->route_params = $route_params;
    }

    public function __call($method, $args){
        $method = $method."Action";

        if(method_exists($this, $method)){
            if($this->before() !== false){
                call_user_func_array([$this, $method], $args);
                $this->after();
            }
        }else{
            throw new \Exception("Method $method doesn't exist in controller".get_class($this));
        }
    }

    protected function before(){
        //attemps to login and refresh the session data
        if(Auth::isLoggedIn()){
            $this->refreshSessionData();
        };

    }

    protected function after(){

    }



    public function redirect($url){
        header("Location: http://".$_SERVER["HTTP_HOST"].$url,true, 303);
        exit();
    }

    public function requireLogin(){
        if(!Auth::isLoggedIn()){
            Auth::rememberRequestedPage();
            $this->redirect('/login');
        }
    }

    public function requireAdmin(){
        if(!Auth::isAdmin()){
            View::renderTemplate('404.twig');
            exit();
        }
    }

    /**
     * Run everytime there's a request
     */
    public function refreshSessionData(){
        $user = Users::getCurrentUser();
        $_SESSION['available_funds'] = $user->getAvailableFunds();
        $_SESSION['is_admin'] = $user->getIsAdmin();
        if(!$user->getVipStatus()
            || $user->getVipStatus()->getTimestamp() < time()){
            $_SESSION['vip_status'] = 'no';
        }else{
            $_SESSION['vip_status'] = 'yes';
            $_SESSION['vip_date'] = $user->getVipStatus()->format('d-m-Y');
        }
        $_SESSION['cart_items'] = CartItems::getCount();
    }
}