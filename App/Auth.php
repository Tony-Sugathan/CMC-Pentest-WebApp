<?php


namespace App;


use App\Models\RememberedLogins;
use App\Models\Users;
use Core\Controller;
use Core\DAO;

class Auth extends \Core\Controller
{
    public static function authenticate($username, $password){
        $em = DAO::getEntityManager()->getRepository("App\Models\Users");
        //select * from users where username = 'username' limit 1
        $user = $em->findOneBy(
            [
                'username'=>$username
            ]
        );

        if($user == null){
            return false;
        }

        if(password_verify($password, $user->getPassword())){
            return $user;
        }else{
            return false;
        }
    }
    /**
     * Login the user
     *
     * @param Users $user The user model
     *
     * @return void
     */
    public static function login($user, $remember)
    {
        session_regenerate_id(true);

        $_SESSION['user_id'] = $user->getId();
        $_SESSION['username'] = $user->getUsername();

        if($remember){
            if($remember_info = $user->rememberLogin()){
                //set cookie
                setcookie('remember_me',$remember_info['token'], $remember_info['expires_at'], '/');
            }
        }
    }

    /**
     * Logout the user
     *
     * @return void
     */
    public static function logout()
    {
        // Unset all of the session variables
        $_SESSION = [];

        // Delete the session cookie
        if (ini_get('session.use_cookies')) {
            $params = session_get_cookie_params();

            setcookie(
                session_name(),
                '',
                time() - 42000,
                $params['path'],
                $params['domain'],
                $params['secure'],
                $params['httponly']
            );
        }

        // Finally destroy the session
        session_destroy();

        //TODO delete remembered logins
        self::deleteRememberedLogins();
    }

    /**
     * Return indicator of whether a user is logged in or not
     *
     * @return boolean
     */
    public static function isLoggedIn()
    {
        return isset($_SESSION['user_id']) || self::loginFromRememberCookie();
    }

    /**
     * Return indicator of whether a user is logged in or not
     *
     * @return boolean
     */
    public static function isAdmin()
    {
        return isset($_SESSION['user_id']) && $_SESSION['is_admin'];
    }

    /**
     * Remember the originally-requested page in the session
     *
     * @return void
     */
    public static function rememberRequestedPage()
    {
        $_SESSION['return_to'] = $_SERVER['REQUEST_URI'];
    }

    /**
     * Get the originally-requested page to return to after requiring login, or default to the homepage
     *
     * @return string
     */
    public static function getReturnToPage()
    {
        return $_SESSION['return_to'] ?? '/';
    }

    /**
     * Login the user from a remembered login cookie
     *
     * @return mixed The user model if login cookie found; null otherwise
     */
    protected static function loginFromRememberCookie()
    {
        $cookie = $_COOKIE['remember_me'] ?? false;

        if ($cookie) {

            $remembered_login = RememberedLogins::getFromCookie($cookie);

            if ($remembered_login) {

                $user = $remembered_login->getUser();

                self::login($user, false);

                return true;
            }
        }
        return false;
    }

    protected static function deleteRememberedLogins(){
        $cookie = $_COOKIE['remember_me'] ?? false;

        if ($cookie) {

            $remembered_login = RememberedLogins::getFromCookie($cookie);

            if ($remembered_login) {

                $em = DAO::getEntityManager();
                $em->remove($remembered_login);
                $em->flush();
            }
        }
        return false;
    }
}