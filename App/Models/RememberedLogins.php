<?php


namespace App\Models;
use Core\DAO;
use Core\Token;
use Doctrine\ORM\Mapping as ORM;

/**
 * RememberedLogins
 *
 * @ORM\Table(name="remembered_logins", indexes={@ORM\Index(name="fk_remembered_logins_users", columns={"user_id"})})
 * @ORM\Entity
 */
class RememberedLogins
{
    /**
     * @var string
     *
     * @ORM\Column(name="token_hash", type="string", length=64, nullable=false)
     * @ORM\Id
     */
    private $tokenHash;

    /**
     * @var \DateTime|null
     *
     * @ORM\Column(name="expires_at", type="datetime", nullable=true)
     */
    private $expiresAt;

    /**
     * @var Users
     *
     * @ORM\ManyToOne(targetEntity="Users")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="user_id", referencedColumnName="id")
     * })
     */
    private $user;

    /**
     * RememberedLogins constructor.
     * @param string $tokenHash
     * @param \DateTime|null $expiresAt
     * @param Users $user
     */
    public function __construct(string $tokenHash, int $expiresAt, Users $user)
    {
        $this->tokenHash = $tokenHash;
        $this->expiresAt = new \DateTime();
        $this->expiresAt->setTimestamp($expiresAt);
        $this->user = $user;
    }

    /**
     * @return string
     */
    public function getTokenHash(): string
    {
        return $this->tokenHash;
    }

    /**
     * @param string $tokenHash
     */
    public function setTokenHash(string $tokenHash): void
    {
        $this->tokenHash = $tokenHash;
    }

    /**
     * @return \DateTime|null
     */
    public function getExpiresAt(): ?\DateTime
    {
        return $this->expiresAt;
    }

    /**
     * @param \DateTime|null $expiresAt
     */
    public function setExpiresAt(?\DateTime $expiresAt): void
    {
        $this->expiresAt = $expiresAt;
    }

    /**
     * @return Users
     */
    public function getUser(): Users
    {
        return $this->user;
    }

    /**
     * @param Users $user
     */
    public function setUser(Users $user): void
    {
        $this->user = $user;
    }

    public static function getFromCookie($cookie): ?RememberedLogins{
        $token = new Token($cookie);
        $hash = $token->getHash();
        return DAO::getEntityManager()->getRepository(":RememberedLogins")->findOneBy(['tokenHash'=>$hash]);
    }
}
