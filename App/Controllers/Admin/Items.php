<?php


namespace App\Controllers\Admin;



use Core\DAO;
use Core\FileUpload;
use Core\Flash;
use Core\View;

class Items extends \Core\Controller
{
    public function editAction(){ //TODO
        $itemId = $this->route_params['id'];
        //get the items
        $item = DAO::getEntityById(":Items", $itemId);

        if($_SERVER['REQUEST_METHOD'] === 'GET'){
            //render the form to edit
            View::renderTemplate('Items/add-item.twig',['action'=>$_SERVER['REQUEST_URI'], 'item'=>$item]);
        }elseif ($_SERVER['REQUEST_METHOD'] === 'POST'){
            //update info
            $item->setName($_POST['name']);
            $item->setDescription($_POST['description']);
            $item->setAvailableQuantity($_POST['available_quantity']);
            $item->setPrice($_POST['price']);

            if($_FILES['image']['size'] != 0){
                //image changed
                $image = FileUpload::uploadImage($_FILES['image'], $item->getId());
                $item->setImagePath($image);
            }
            DAO::getEntityManager()->flush();
            $this->redirect("/items");
        }
    }

    public function addAction(){
        if($_SERVER['REQUEST_METHOD'] === 'GET'){
            //render the form to add
            View::renderTemplate('Items/add-item.twig',['action'=>$_SERVER['REQUEST_URI']]);
        }elseif ($_SERVER['REQUEST_METHOD'] === 'POST'){
            //add to DB
            $itemName = $_POST['name'];
            $itemDescription = $_POST['description'];
            $itemAvailableQuantity = $_POST['available_quantity'];
            $itemPrice = $_POST['price'];
            $itemImage = $_FILES['image'];
            $imagePath = FileUpload::uploadImage($itemImage, DAO::getNextAutoIncrement('PHP_CMC_WebApp', 'items'));
            if(!$imagePath){
                View::renderTemplate('Items/add-item.twig',['error'=>FileUpload::getError()[0]]);
                exit();
            }
            $item = new \App\Models\Items($itemName, $itemDescription, $itemAvailableQuantity, $itemPrice, $imagePath);
            $em = DAO::getEntityManager();
            $em->persist($item);
            $em->flush();

            Flash::addMessage("Item added successfully!");
            $this->redirect("/admin/items/add");
        }
    }

    public function removeAction(){
        $itemId = $this->route_params['id'];
        //remove the item
        $item = DAO::getEntityById(":Items", $itemId);
        DAO::getEntityManager()->remove($item);
        DAO::getEntityManager()->flush();
        Flash::addMessage("Item removed!");
        $this->redirect("/items");
    }

    protected function before()
    {
        parent::before();
        $this->requireAdmin();
    }


}