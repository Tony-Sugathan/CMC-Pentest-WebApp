<?php


namespace App\Controllers;


use App\Models\Users;
use Core\Auth;
use Core\DAO;
use Core\FileUpload;
use Core\Flash;
use Core\Helper;
use Core\View;

class Profile extends \Core\Controller
{
    public function indexAction(){
        $userId = $this->route_params['id']??$_SESSION['user_id'];

        $user = Users::getById($userId);
        if(!$user){
            //doesn't exists, display error
            View::renderTemplate('404.twig');
        }else{
            View::renderTemplate('Profile/profile-details.twig', ['user'=>$user]);
        }
    }

    public function editAction(){
        //always edit own profile
        $user = Users::getCurrentUser();
        if(isset($_POST['fullname']) && !empty($_POST['fullname'])){
            $fullname = Helper::test_input($_POST['fullname']);
            $user->setFullName($fullname);
        }

        if(isset($_POST['email']) && !empty($_POST['email'])){
            $email = Helper::test_input($_POST["email"]);
            //test valid email
            if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                Flash::addMessage("Invalid email format.", Flash::WARNING);
            }
            //find dups
            if(Users::getByEmail($email)){
                Flash::addMessage("Email already taken.", Flash::WARNING);
            }

            $user->setEmail($email);
        }

        if($_FILES['image']['size'] != 0){
            //image changed
            $image = FileUpload::uploadImage($_FILES['image'], $user->getId(), FileUpload::$USERS_IMAGE_PATH);
            $user->setImagePath($image);
        }

        DAO::getEntityManager()->flush();
//        Flash::addMessage("Email already taken.", Flash::WARNING);
        $this->redirect("/profile");
    }


    public function changePasswordAction(){
        //display change password page
        View::renderTemplate("Profile/change-password.twig");
    }

    public function doChangePasswordAction(){
        $user = Users::getCurrentUser();
        $old_password = $_POST['old_password'];
        $new_password = $_POST['new_password'];
        $confirm_new_password = $_POST['confirm_new_password'];

        if(Auth::authenticate($user->getUsername(), $old_password)){
            if($new_password != $old_password){
                if($new_password == $confirm_new_password){
                    $user->setPassword($new_password);
                    DAO::getEntityManager()->flush();
                    Flash::addMessage("Password changed!");
                    $this->redirect("/profile");
                }else{
                    Flash::addMessage("Please confirm your password!", Flash::WARNING);
                }
            }else{
                Flash::addMessage("Please choose another password!", Flash::WARNING);
            }
        }else{
            Flash::addMessage("Wrong password", Flash::WARNING);
        }
        $this->redirect("/profile/change-password");
    }

    protected function before()
    {
        parent::before();
        $this->requireLogin();
    }


}